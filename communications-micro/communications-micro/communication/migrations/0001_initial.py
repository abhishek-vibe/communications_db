# Generated by Django 5.2.5 on 2025-08-25 10:37

import communication.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('venue', models.CharField(max_length=255)),
                ('event_type', models.CharField(choices=[('internal', 'Internal'), ('external', 'External')], default='internal', max_length=10)),
                ('theme', models.JSONField(blank=True, help_text='Visual customization settings', null=True)),
                ('is_important', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False, help_text='If true, visible to all users')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL)),
                ('rsvp_maybe', models.ManyToManyField(blank=True, related_name='events_rsvp_maybe', to=settings.AUTH_USER_MODEL)),
                ('rsvp_no', models.ManyToManyField(blank=True, related_name='events_rsvp_no', to=settings.AUTH_USER_MODEL)),
                ('rsvp_yes', models.ManyToManyField(blank=True, related_name='events_rsvp_yes', to=settings.AUTH_USER_MODEL)),
                ('visible_to_users', models.ManyToManyField(blank=True, related_name='visible_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'communication_events',
                'ordering': ['date', 'time'],
            },
        ),
        migrations.CreateModel(
            name='EventRSVPLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('maybe', 'Maybe')], max_length=10, null=True)),
                ('new_status', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('maybe', 'Maybe')], max_length=10)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rsvp_logs', to='communication.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'communication_event_rsvp_logs',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('group_type', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=10)),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_groups', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(blank=True, related_name='user_groups', to=settings.AUTH_USER_MODEL)),
                ('owners', models.ManyToManyField(blank=True, related_name='owned_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'communication_groups',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='visible_to_groups',
            field=models.ManyToManyField(blank=True, related_name='visible_events', to='communication.group'),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=communication.models.upload_to_media, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'mp4', 'avi', 'mov', 'pdf', 'doc', 'docx', 'txt'])])),
                ('file_name', models.CharField(max_length=255)),
                ('file_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('pdf', 'PDF'), ('document', 'Document')], max_length=20)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'communication_media',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='media',
            field=models.ManyToManyField(blank=True, related_name='event_media', to='communication.media'),
        ),
        migrations.CreateModel(
            name='Broadcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('important', 'Important'), ('normal', 'Normal')], default='normal', max_length=10)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('audience_type', models.CharField(choices=[('all', 'All'), ('groups', 'Groups'), ('users', 'Users')], default='all', max_length=10)),
                ('send_email', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_by', models.ManyToManyField(blank=True, related_name='acknowledged_broadcasts', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_broadcasts', to=settings.AUTH_USER_MODEL)),
                ('target_users', models.ManyToManyField(blank=True, related_name='targeted_broadcasts', to=settings.AUTH_USER_MODEL)),
                ('viewed_by', models.ManyToManyField(blank=True, related_name='viewed_broadcasts', to=settings.AUTH_USER_MODEL)),
                ('target_groups', models.ManyToManyField(blank=True, related_name='targeted_broadcasts', to='communication.group')),
                ('attachments', models.ManyToManyField(blank=True, related_name='broadcast_attachments', to='communication.media')),
            ],
            options={
                'db_table': 'communication_broadcasts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BroadcastView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('broadcast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_logs', to='communication.broadcast')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'communication_broadcast_views',
                'unique_together': {('broadcast', 'user')},
            },
        ),
    ]
